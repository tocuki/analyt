import asyncio
import sqlite3
import logging
import datetime
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
import os

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ (–±–µ—Ä–∏ –∏–∑ Render Environment Variables)
TOKEN = os.getenv("TOKEN")  

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
ADMIN_ID = 8177169682  

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect("students.db")
cursor = conn.cursor()

# –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
cursor.execute("""CREATE TABLE IF NOT EXISTS students (
    id INTEGER PRIMARY KEY,
    name TEXT UNIQUE
)""")

cursor.execute("""CREATE TABLE IF NOT EXISTS scores (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    student_id INTEGER,
    score INTEGER,
    date TEXT,
    FOREIGN KEY (student_id) REFERENCES students (id)
)""")
conn.commit()

# ======================== –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê =========================

@dp.message(Command("start"))
async def start(message: Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –æ—Ü–µ–Ω–æ–∫.\n\nüìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                         "/list - –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤\n"
                         "/top_week - –¢–æ–ø —É—á–µ–Ω–∏–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é\n"
                         "/top_month - –¢–æ–ø —É—á–µ–Ω–∏–∫–æ–≤ –∑–∞ –º–µ—Å—è—Ü\n"
                         "/top_alltime - –¢–æ–ø —É—á–µ–Ω–∏–∫–æ–≤ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è\n"
                         "/add [–æ—Ü–µ–Ω–∫–∞] [ID] - –î–æ–±–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É\n"
                         "/remove_scores [ID] [–∫–æ–ª-–≤–æ] - –£–¥–∞–ª–∏—Ç—å –±–∞–ª–ª—ã\n"
                         "/clear_scores [ID] - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –æ—Ü–µ–Ω–∫–∏")

@dp.me
